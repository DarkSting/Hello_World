@model PaymentModel

@{
    IEnumerable<ProductModel> items = ViewBag.CartItems;
    CartModel cart = ViewBag.Cart;
    Dictionary<string, CheckoutModel> aircrafts = ViewBag.AirCrafts;
    double totalprice = 0;
    double selectedItemsPrice = 0;
    IEnumerable<ShippingModel> shippings = ViewBag.Shippings;
}

<!-- Dialog box -->
<div class="modal" id="messageBox" tabindex="-1" role="dialog" aria-labelledby="messageBoxLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="messageBoxLabel">Modal title</h5>
            </div>
            <div class="modal-body">
                <!-- Content from AJAX response will be placed here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary close-button" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--Item list body-->
<form asp-controller="Payment" asp-action="ProcessPayment" method="post">

    <input type="hidden" asp-for="@Model.UserId" />
    <div class="row d-flex justify-content-center">

        @foreach (CheckoutModel current in aircrafts.Values)
        {
            string aircraftdesc = current.AirCraft.AircraftType;

            int count = current.Count;
            double price = current.ProductTotalCost * count;
            double unitprice = current.AirCraft.AirCraftPrice;

            <input type="hidden" asp-for="@Model.aircrafts[current.ProductId].ProductId" />

            <div class="card catalog-card col-10 mt-2 checkout-element-card" id="item-@current.AirCraft.AircraftId">
                <h4>@aircraftdesc</h4>
                <input type="hidden" id="product-id" value="@current.ProductId" />
                <p id="item-unit-price-@current.ProductId">Price: @current.AirCraft.AirCraftPrice</p>
                <input type="hidden" asp-for="@Model.aircrafts[current.ProductId].ProductTotalCost" id="item-custom-unit-price-@current.ProductId" value="@current.ProductTotalCost" />

                @if (Model.aircrafts[current.ProductId].Seat != null || Model.aircrafts[current.ProductId].ExteriorClr != null || Model.aircrafts[current.ProductId].InteriorClr != null)
                {
                    <p class="mt-2"><strong>Price with customization</strong></p>
                    <p id="item-total-@current.ProductId">Price: @current.ProductTotalCost</p>
                }

                <!--unit price-->
                <input type="hidden" asp-for="@current.AirCraft.AircraftType" />
                <input type="hidden" value="@(price/count)" id="item-price-@current.AirCraft.AircraftId" />
                <input type="hidden" id="aircraft-product-id-@current.AirCraft.AircraftId" value="@current.ProductId"/>
                <!--air craft details-->
                <div class="d-flex flex-row align-items-start">
                    <button class="btn btn-secondary btn-danger mr-2 item-button-decrease-count" data-itemid="@current.AirCraft.AircraftId" type="button">-</button>
                    <h6>Count :  </h6>
                    <h5 id="item-count-@current.AirCraft.AircraftId">@count</h5>
                </div>
                <input type="hidden" asp-for="@Model.aircrafts[current.ProductId].AirCraft.AircraftId" />
                <input type="hidden" asp-for="@Model.aircrafts[current.ProductId].Count" value="@count" id="model-count-@Model.aircrafts[current.ProductId].AirCraft.AircraftId" />
                <input type="hidden" asp-for="@Model.aircrafts[current.ProductId].Count" value="@count" id="model-count-@current.ProductId" />

                <!--aircraft customizations-->
                @if (Model.aircrafts[current.ProductId].Seat != null || Model.aircrafts[current.ProductId].ExteriorClr != null || Model.aircrafts[current.ProductId].InteriorClr != null)
                {
                    <h5 class="mt-5">Customizations</h5>
                }

                <!--seat customization-->
                @if (Model.aircrafts[current.ProductId].Seat != null)
                {
                    <div id="customization-seat-@current.Customization.CustomId" class="mt-2">
                        <input type="hidden" id="customization-id" value="@current.Customization.CustomId" />
                        <input type="hidden" id="customization-product-id" value="@current.ProductId" />
                        <input type="hidden" id="customization-seat-id" asp-for="@Model.aircrafts[current.ProductId].Seat.SeatID" />
                        <input type="hidden" id="customization-seat-price" value="@Model.aircrafts[current.ProductId].Seat.UnitPrice" />
                        <div class="customization-elements mb-2">
                            <h5 class="custom-text-h5">Custom Seat : @Model.aircrafts[current.ProductId].Seat.SeatType</h5>
                            <button type="button" class="btn btn-dark ml-2 remove-customization-btn" data-itemid="customization-seat-@current.Customization.CustomId">-</button>
                        </div>
                    </div>
                }

                <!--exterior customization-->
                @if (Model.aircrafts[current.ProductId].ExteriorClr != null)
                {
                    <div id="customization-exterior-@current.Customization.CustomId" class="mt-2">
                        <input type="hidden" id="customization-id" value="@current.Customization.CustomId" />
                        <input type="hidden" id="customization-product-id" value="@current.ProductId" />
                        <input type="hidden" id="customization-exterior-color-id" asp-for="@Model.aircrafts[current.ProductId].ExteriorClr.ColorId" />
                        <input type="hidden" id="customization-exterior-price" value="@Model.aircrafts[current.ProductId].ExteriorClr.Price" />
                        <div class="customization-elements mb-2">
                            <h5 class="custom-text-h5">Exterior Color : @Model.aircrafts[current.ProductId].ExteriorClr.Color</h5>
                            <button type="button" class="btn btn-dark ml-2 remove-customization-btn" data-itemid="customization-exterior-@current.Customization.CustomId">-</button>
                        </div>
                    </div>
                }


                <!--interior customization-->
                @if (Model.aircrafts[current.ProductId].InteriorClr != null)
                {
                    <div id="customization-interior-@current.Customization.CustomId" class="mt-2">
                        <input type="hidden" id="customization-id" value="@current.Customization.CustomId" />
                        <input type="hidden" id="customization-product-id" value="@current.ProductId" />
                        <input type="hidden" id="customization-interior-color-id" asp-for="@Model.aircrafts[current.ProductId].InteriorClr.ColorId" />
                        <input type="hidden" id="customization-interior-price" value="@Model.aircrafts[current.ProductId].InteriorClr.Price" />
                        <div class="customization-elements mb-2">
                            <h5 class="custom-text-h5">Interior Color : @Model.aircrafts[current.ProductId].InteriorClr.Color</h5>
                            <button type="button" class="btn btn-dark ml-2 remove-customization-btn" data-itemid="customization-interior-@current.Customization.CustomId">-</button>
                        </div>
                    </div>
                }

                <!--select box and remove item-->
                <div class="row justify-content-end mb-2">

                    <input type="checkbox" id="checkbox:@current.ProductId" asp-for="@Model.aircrafts[current.ProductId].IsSelected" class="form-control col-1 product-check" />
                    <button type="button" class="btn btn-dark mr-2 delete-item" data-itemid="@current.ProductId">Delete<i class="fas fa-trash-alt ml-1"></i></button>
                </div>
            </div>

            totalprice += price;

        }
        
    </div>


    <!--total price section-->
    <div class="total-price-container" id="stickyElement">
        <div class="row p-2 justify-content-center">
            <div class="col-3 ml-3">
                <label asp-for="@Model.shippingId" class="control-label"></label>
                <select asp-for="@Model.shippingId" class="form-control aircraft-page-size-option" id="shipping-dropdown" asp-items="@(new SelectList(shippings, "ShippingId", "ShippingType"))">
                    <option value="">Choose a shipping type</option>
                </select>
                <span asp-validation-for="@Model.shippingId" class="text-danger"></span>

                @foreach (ShippingModel currentshipping in shippings)
                {
                    <input type="hidden" id="shipping-id-@currentshipping.ShippingId" value="@currentshipping.ShippingCost" />
                }

            </div>
            <div class="col-3">
                <label asp-for="@Model.shippingAddress" class="control-label mt-2"></label>
                <input asp-for="@Model.shippingAddress" class="form-control aircraft-page-size-option" />
                <span asp-validation-for="@Model.shippingAddress" class="text-danger"></span>
            </div>
            <div class="col-3 justify-content-center">
                <h3>Total Price</h3>
                <h4 id="total-price">$ @totalprice</h4>
            </div>
            <div class="col-12 justify-content-center mt-5 mb-5">
                <div class="row justify-content-center">
                    <h5>Selected Items Total Price : </h5>
                    <h5 class="mr-3" id="selected-total-price">$ @selectedItemsPrice</h5>
                    <h5>Shipping Cost For Per Flight : </h5>
                    <h5 class="mr-3" id="selected-shipping-cost"></h5>
                    <button type="submit" class="btn btn-secondary ml-2">Checkout</button>
                </div>
            </div>
        </div>
        <input asp-for="@Model.Amount" type="hidden" value="@totalprice" />
    </div>



</form>

@section Scripts {

    <script>
        $(document).ready(function () {

            var previousVal = 0;

            reduceItemCount();
            RemoveCustomization();
            deleteProduct();
            setThePriceForTheCurrentShipping();
            selectionOfTheProductItems();

            var selectedTotal = 0;

            function selectionOfTheProductItems() {

               
                parseInt($('#selected-total-price').text().slice(1, $('#selected-total-price').text().length).trim());

                let currentSelectedShippingId = $('#shipping-dropdown').val();
                

                var shippingPrice = 0;

                if (currentSelectedShippingId !== "") {

                    shippingPrice = parseInt($(`#shipping-id-${currentSelectedShippingId}`));
                }

                $(".catalog-card input[type='checkbox']").change(function () {

                    var isCheckBoxSelected = $(this).is(":checked");
                    var checkBoxId = $(this).attr("id");
                    var selectedProductId = checkBoxId.toString().split(':')[1];
                    var selectedProductPrice = $(`#item-custom-unit-price-${checkBoxId.toString().split(':')[1]}`).val();
                    let productCount = $(`#model-count-${selectedProductId}`).val()
                    //item-custom-unit-price
                    if (isCheckBoxSelected) {
                        var checkboxId = $(this).attr("id");

                        selectedTotal = selectedTotal + (selectedProductPrice * productCount);
                       
                    } else {

                        selectedTotal = selectedTotal - (selectedProductPrice * productCount)
                        
                    }


                    $('#selected-total-price').text(`$ ${selectedTotal}`)

                });

            }


            //set shipping price according to the selected shipping method
            function setThePriceForTheCurrentShipping() {



                $('#shipping-dropdown').change(function () {

                    let currentTotal = parseFloat($('#total-price').text().slice(1, $('#total-price').text().length).trim())

                    console.log(currentTotal);
        
                    var selectedValue = $(this).val();

                    let currentVal = $('#shipping-dropdown').val() === "" ? 0 : parseInt($(`#shipping-id-${selectedValue}`).val());
                    //deducting the previous price before new price is subtracted

                    $('#selected-shipping-cost').text(currentVal);

                    if (currentVal != previousVal) {
                        currentTotal = currentTotal - previousVal;
                        currentTotal = currentTotal + currentVal;
                        console.log(currentTotal);
                        previousVal = currentVal;
                        $('#total-price').text(`$ ${currentTotal}`);
                    }

                   

                  
                
                });

            }




            //deletes the product from the viewcart
            function deleteProduct() {
                //removing the item from the cart
                $('.delete-item').click(function () {
                    let itemId = $(this).data('itemid');
                    console.log(itemId);

                    $.ajax({
                        url: `/Cart/DeleteItem?itemid=${itemId}`, // Your delete endpoint
                        method: 'DELETE',
                        success: function (response) {

                            console.log(response);
                            //removes the item elements from the cart and displays a successfull message
                            if (response) {
                                $('#messageBoxLabel').text('Success Modal');
                                $('.modal-body').html('<p>Success: ' + response.msg + '</p>');

                            } else {
                                $('#messageBoxLabel').text('Error Modal');
                                $('.modal-body').html('<p>Error: ' + response.error + '</p>');
                            }

                            // Show the modal
                            $('#messageBox').modal('show');
                            $('#messageBox').on('hidden.bs.modal', function () {
                                // Reload the page when the modal is closed
                                location.reload();
                            });

                        },
                        error: function (error) {
                            $('#messageBoxLabel').text('Error Modal');
                            $('.modal-body').html('<p>Error: ' + error.message + '</p>');
                            $('#messageBox').modal('show');
                        }
                    });
                });
            }



            //calcualting the total price after removing the customization
            function calculateTotalCostWhenRemoveCustomization(reducingPercentage, productid) {

                let currentTotal = parseFloat($('#total-price').text().slice(1, $('#total-price').text().length).trim())
                let aircraftInitalPrice = parseFloat($(`#item-unit-price-${productid}`).text().split(':')[1].trim());

                let reducedPrice = (aircraftInitalPrice * reducingPercentage) / 100;
                currentTotal = currentTotal - reducedPrice;

                $('#total-price').text(`$ ${Math.floor(currentTotal)}`);
                $(`#item-custom-unit-price-${productid}`).val(currentTotal);
            }

            //calculate the unit price when removing the customization
            function calculateTheTotalForAUnit(reducingPercentage, productid) {

                let aircraftInitalPrice = parseFloat($(`#item-unit-price-${productid}`).text().split(':')[1].trim());

                //selecting the total price for a unit 
                let unitTotalPrice = parseFloat($(`#item-total-${productid}`).text().split(':')[1].trim())

                unitTotalPrice = unitTotalPrice - (aircraftInitalPrice * reducingPercentage) / 100;

                $(`#item-total-${productid}`).text(`Price : ${unitTotalPrice}`);
                $(`#item-custom-unit-price-${productid}`).val(unitTotalPrice);
            }

            function RemoveCustomization() {

                $('.remove-customization-btn').click(function () {

                    //selects the data of the current clicked button with its target element to be modified
                    var itemdata = $(this).data('itemid');


                    //selects the modification type eg : seat, interior color etc
                    var customizationItem = itemdata.toString().split('-')[1].trim();

                    //selects the customization id
                    var currentCustomizationElem = $(`#${itemdata} #customization-id`).val();

                    //select the aircraft id
                    let productid = $(`#customization-${customizationItem}-${currentCustomizationElem} #customization-product-id`).val();


                    //based on the selected item sends the data to be removed
                    if (customizationItem === "seat") {

                        let seatid = $(`#${itemdata} #customization-seat-id`).val();
                        let percentage = $('#customization-seat-price').val();
                        calculateTotalCostWhenRemoveCustomization(percentage, productid);
                        calculateTheTotalForAUnit(percentage, productid);
                        sendDataOfRemovedCustom(customizationItem, seatid, currentCustomizationElem, $(`#customization-${customizationItem}-${currentCustomizationElem}`))



                    }
                    else if (customizationItem === "exterior") {

                        let colorid = $(`#${itemdata} #customization-exterior-color-id`).val()
                        let percentage = $('#customization-exterior-price').val();
                        calculateTotalCostWhenRemoveCustomization(percentage, productid);
                        calculateTheTotalForAUnit(percentage, productid);
                        sendDataOfRemovedCustom(customizationItem, colorid, currentCustomizationElem, $(`#customization-${customizationItem}-${currentCustomizationElem}`))
                    }
                    else if (customizationItem === "interior") {

                        let colorid = $(`#${itemdata} #customization-interior-color-id`).val()
                        let percentage = $('#customization-interior-price').val();
                        calculateTotalCostWhenRemoveCustomization(percentage, productid);
                        calculateTheTotalForAUnit(percentage, productid);
                        sendDataOfRemovedCustom(customizationItem, colorid, currentCustomizationElem, $(`#customization-${customizationItem}-${currentCustomizationElem}`))
                    }

                })

            }

            function sendDataOfRemovedCustom(customtype, elementid, customizationid, element) {


                console.log(`customtp ${customtype} elementid ${elementid} customizationid${customizationid}`)
                element.remove();

                $.ajax({
                    url: '/cart/removecustomization',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        customtype: customtype,
                        elementid: elementid,
                        customizationid: customizationid
                    })
                    ,
                    success: function (response) {
                        var res = JSON.parse(response);
                        $('#messageBoxLabel').text('Success');
                        $('.modal-body').html('<p>Success: ' + res.msg + '</p>');
                        $('#messageBox').modal('show');
                        location.reload();

                    },
                    error: function (error) {
                        var res = JSON.parse(error);
                        $('#messageBoxLabel').text('Error Modal');
                        $('.modal-body').html('<p>Error: ' + res.msg + '</p>');
                        $('#messageBox').modal('show');
                    }
                })

            }

            function reduceItemCount() {

                $('.item-button-decrease-count').click(function () {

                    var itemdata = $(this).data('itemid');

                    console.log(itemdata);

                    //getting the previous value and update the current count 
                    let prevcount = parseInt($(`#item-count-${itemdata}`).text());

                    if (prevcount == 1) {

                        //disabling the count reducing button
                        $(this).prop('disabled', true);

                    }
                    else {
                        //re-evaluating the total 
                        $(`#item-count-${itemdata}`).text((prevcount - 1).toString());
                        let totalprice = parseFloat($('#total-price').text().slice(1, $('#total-price').text().length).trim());
                        console.log($(`#item-price-${itemdata}`).val());
                        totalprice -= parseFloat($(`#item-price-${itemdata}`).val())
                        $('#total-price').text('$ ' + totalprice.toString());

                        var productIdForAircraft = $(`#aircraft-product-id-${itemdata}`).val()

                        $(`#model-count-${itemdata}`).val(prevcount - 1)
                        $(`#model-count-${productIdForAircraft}`).val(prevcount - 1)

                        console.log($(`#model-count-${productIdForAircraft}`).val());
                        console.log($(`#model-count-${itemdata}`).val());

                        //animating the element when removing
                        $(this).prop('disabled', true);
                        let itemdiv = $('#item-' + itemdata);
                        let currentclass = itemdiv.attr('class');
                        itemdiv.toggleClass('shakeElement');
                        let currentElement = $(this);
                        setTimeout(function () {
                            itemdiv.attr('class', currentclass);
                            currentElement.prop('disabled', false);
                        }, 850);

                        //update the database
                        reduceCountDeleteAJAX(productIdForAircraft);
                    }

                })
            }


            //reduces the item count
            function reduceCountDeleteAJAX(itemdata) {

                $.ajax(
                    {
                        url: `/Cart/ReduceItemCount?itemid=${itemdata}`, // Your delete endpoint
                        method: 'DELETE',
                        success: function (response) {

                            console.log(response.msg);
                            var res = JSON.parse(response);
                            $('#messageBoxLabel').text('Success');
                            $('.modal-body').html('<p>Success: ' + res.msg + '</p>');
                            $('#messageBox').modal('show');


                        },
                        error: function (error) {
                            var res = JSON.parse(error);
                            $('#messageBoxLabel').text('Error Modal');
                            $('.modal-body').html('<p>Error: ' + res.msg + '</p>');
                            $('#messageBox').modal('show');
                        }
                    });
            }
        })

    </script>
}